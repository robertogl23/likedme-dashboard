{"version":3,"sources":["api/app.js","components/Login.jsx","components/NavBar.jsx","components/FormProductEdit.jsx","components/FormProductAdd.jsx","components/TableProducts.jsx","components/Jumbotron.jsx","components/Dashboard.jsx","context/AppContext.js","App.js","serviceWorker.js","index.js"],"names":["url","headers","postFetch","data","urlApi","a","fetch","method","body","JSON","stringify","response","json","getFetch","Login","useForm","register","handleSubmit","React","useState","isLoading","setLoading","message","setMessage","history","useHistory","useEffect","sessionStorage","removeItem","Container","style","marginTop","Row","Col","Card","Header","as","Body","Title","Form","Group","controlId","Label","Control","type","placeholder","name","ref","Alert","variant","onClose","dismissible","Heading","Button","disabled","onClick","then","resp","status","setItem","adminDB","push","NavBar","parse","getItem","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","firtsName","Item","FormProductEdit","product","requestProduct","error","setError","defaultValue","_id","nameProduct","price","quantity","available","obj","parseInt","putFetch","console","log","setTimeout","FormProductAdd","TableProducts","products","filterProducts","setFilterProducts","selectProduct","setSelectProduct","show","setShow","typeModal","setTypeModal","handleShow","upDate","productsDB","delateProduct","delateFetch","Modal","onHide","backdrop","keyboard","size","aria-labelledby","centered","closeButton","marginBottom","marginLeft","marginRight","onChange","filter","e","filterProductsFunction","value","Table","striped","bordered","hover","map","p","i","key","handleSelect","JumBotron","sessionID","Jumbotron","enrollment","Dashboard","setProducts","adminDate","Spinner","animation","role","AppContext","createContext","AppContextProvider","state","admin","getProducts","setState","Provider","this","props","children","Component","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.de86ecca.chunk.js","sourcesContent":["const url = \"https://likeme-backend.herokuapp.com/api/v1\";\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\nexport async function postFetch(data,urlApi) {\r\n  try {\r\n    const response = await fetch(`${url}/${urlApi}`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await response.json()\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\nexport async function putFetch(data,urlApi) {\r\n  try {\r\n    const response = await fetch(`${url}/${urlApi}`, {\r\n      method: \"PUT\",\r\n      headers,\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await response.json()\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\nexport async function getFetch(urlApi) {\r\n  try {\r\n    const response = await fetch(`${url}/${urlApi}`);\r\n    return await response.json()\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\nexport async function delateFetch(urlApi) {\r\n  try {\r\n    const response = await fetch(`${url}/${urlApi}`,{method: \"DELETE\",});\r\n    return await response.json()\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n\tCard,\r\n\tButton,\r\n\tContainer,\r\n\tCol,\r\n\tRow,\r\n\tForm,\r\n\tAlert,\r\n} from \"react-bootstrap\";\r\nimport { postFetch } from \"../api/app\";\r\nexport default function Login() {\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst [isLoading, setLoading] = React.useState(false);\r\n\tconst [message, setMessage] = React.useState(false);\r\n\tconst history = useHistory();\r\n\tconst onSubmit = (data) => {\r\n\t\tsetLoading(true);\r\n\t\tpostFetch(data, \"login/admin\").then((resp) => {\r\n\t\t\tsetLoading(false);\r\n\t\t\tif (!resp.status) {\r\n\t\t\t\treturn setMessage(true);\r\n\t\t\t}\r\n\t\t\tsessionStorage.setItem(\"id\", JSON.stringify(resp.adminDB));\r\n\t\t\thistory.push(\"/dashboard\");\r\n\t\t});\r\n\t};\r\n\tReact.useEffect(() => {\r\n\t\tsessionStorage.removeItem(\"id\");\r\n\t}, []);\r\n\treturn (\r\n\t\t<Container style={{ marginTop: 60 }}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Header as='h5'>LikedMe Admin</Card.Header>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title>Login</Card.Title>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId='formBasicEmail'>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Admin enrollment </Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enrollment'\r\n\t\t\t\t\t\t\t\t\t\tname='enrollment'\r\n\t\t\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId='formBasicPassword'>\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t{message && (\r\n\t\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\t\t\tonClose={() => setMessage(false)}\r\n\t\t\t\t\t\t\t\t\tdismissible\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Alert.Heading>Oh ah corrido un error!</Alert.Heading>\r\n\t\t\t\t\t\t\t\t\t<p>Porfavor verifique sus datos y vueva a inicia sesion.</p>\r\n\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tvariant='primary'\r\n\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\tonClick={handleSubmit(onSubmit)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{isLoading ? \"Verificando...\" : \"Iniciar Sesion\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React,{useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nexport default function NavBar() {\r\n  const [data, setDate] = useState(JSON.parse(sessionStorage.getItem('id')))\r\n  const history = useHistory();\r\n  const logout = () => {\r\n    sessionStorage.removeItem(\"id\");\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">LikedMe</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title={data.firtsName} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item >Perfil</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={logout}>\r\n              Cerrar Sesion\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n     \r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form, Col, Button, Alert } from \"react-bootstrap\";\r\nimport { putFetch } from \"../api/app\";\r\nexport default function FormProductEdit({ product, requestProduct }) {\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst [isLoading, setLoading] = React.useState(false);\r\n\tconst [error, setError] = React.useState(false);\r\n\tconst [message, setMessage] = React.useState(false);\r\n\tconst onSubmit = (data) => {\r\n\t\tconst obj = {\r\n\t\t\tquantity: parseInt(data.quantity),\r\n\t\t\ttype: data.type,\r\n\t\t\tprice: parseInt(data.price),\r\n\t\t\tname: data.name,\r\n\t\t\tavailable: data.available,\r\n\t\t};\r\n\t\tsetLoading(true);\r\n\r\n\t\tputFetch(obj, `update/product/${data._id}`).then((resp) => {\r\n\t\t\tsetLoading(false);\r\n\t\t\tconsole.log(resp);\r\n\t\t\tif (!resp.status) {\r\n\t\t\t\tsetMessage(true);\r\n\t\t\t\treturn setError(true);\r\n\t\t\t}\r\n\t\t\tsetMessage(true);\r\n\t\t\tsetError(false);\r\n\t\t\trequestProduct();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetMessage(false);\r\n\t\t\t}, 3000);\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Form>\r\n\t\t\t{message &&\r\n\t\t\t\t(error ? (\r\n\t\t\t\t\t<Alert variant='danger'>\r\n\t\t\t\t\t\tHa cocurrido un error,Por favor verifique sus datos que este\r\n\t\t\t\t\t\tcorrectos\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Alert variant='success'>\r\n\t\t\t\t\t\tEl producto de a editado cerrectamente!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t))}\r\n\r\n\t\t\t<Form.Row>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>ID Producto</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tdefaultValue={product._id}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='ID Producto'\r\n\t\t\t\t\t\tname='_id'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form.Row>\r\n\t\t\t<Form.Row>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>Nombre Producto</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tdefaultValue={product.nameProduct}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Nombre Producto'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>Nombre Producto</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tdefaultValue={product.type}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Nombre Producto'\r\n\t\t\t\t\t\tname='type'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form.Row>\r\n\r\n\t\t\t<Form.Row>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridCity'>\r\n\t\t\t\t\t<Form.Label>Precio</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tplaceholder='Precio'\r\n\t\t\t\t\t\tdefaultValue={product.price}\r\n\t\t\t\t\t\tname='price'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridCity'>\r\n\t\t\t\t\t<Form.Label>Cantidad</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tplaceholder='Cantidad'\r\n\t\t\t\t\t\tdefaultValue={product.quantity}\r\n\t\t\t\t\t\tname='quantity'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form.Row>\r\n\t\t\t<Form.Group controlId='formGridEmail'>\r\n\t\t\t\t<Form.Label>Nombre Producto</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tdefaultValue={product.available}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Nombre Producto'\r\n\t\t\t\t\tname='available'\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Button\r\n\t\t\t\ttype='submit'\r\n\t\t\t\tvariant='primary'\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t\tonClick={handleSubmit(onSubmit)}\r\n\t\t\t>\r\n\t\t\t\t{isLoading ? \"Verificando...\" : \"Iniciar Sesion\"}\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n}\r\n","import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport {postFetch} from '../api/app'\r\nimport { Form, Col, Button, Alert } from \"react-bootstrap\";\r\nexport default function FormProductAdd({requestProduct}) {\r\n    const { register, handleSubmit } = useForm();\r\n\tconst [isLoading, setLoading] = React.useState(false);\r\n    const [message, setMessage] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n\tconst onSubmit = (data) => {\r\n\t\t\r\n\t\tpostFetch(data,'add/product').then(resp => {\r\n            setLoading(false);\r\n\t\t\tif (!resp.status) {\r\n                setError(true)\r\n\t\t\t\treturn setMessage(true);\r\n            }\r\n\t\t\trequestProduct();\r\n            setError(false)\r\n\t\t\tsetMessage(true);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetMessage(false);\r\n\t\t\t}, 3000);\r\n        })\r\n\t};\r\n\treturn (\r\n\t\t<Form>\r\n\t\t\t{message &&\r\n\t\t\t\t(error ? (\r\n\t\t\t\t\t<Alert variant='danger'>\r\n\t\t\t\t\t\tNo se a podido crear el producto, Por favor verifique los datos\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Alert variant='success'>\r\n\t\t\t\t\t\tEl producto se a creado cerrectamente!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t))}\r\n\t\t\t<Form.Row>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>Nombre Producto</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Nombre Producto'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridEmail'>\r\n\t\t\t\t\t<Form.Label>Tipo de Producto</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Tipo Producto'\r\n\t\t\t\t\t\tname='type'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form.Row>\r\n\r\n\t\t\t<Form.Row>\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridCity'>\r\n\t\t\t\t\t<Form.Label>Precio</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tplaceholder='Precio'\r\n\t\t\t\t\t\tname='price'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group as={Col} controlId='formGridCity'>\r\n\t\t\t\t\t<Form.Label>Cantidad</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tplaceholder='Cantidad'\r\n\t\t\t\t\t\tname='quantity'\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form.Row>\r\n\t\t\t<Form.Group controlId='formGridEmail'>\r\n\t\t\t\t<Form.Label>Disponible</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Nombre Producto'\r\n\t\t\t\t\tname='available'\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Button\r\n\t\t\t\ttype='submit'\r\n\t\t\t\tvariant='primary'\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t\tonClick={handleSubmit(onSubmit)}\r\n\t\t\t>\r\n\t\t\t\t{isLoading ? \"Verificando...\" : \"Iniciar Sesion\"}\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n}\r\n","import React, { useState,useEffect } from \"react\";\r\nimport FormProductEdit from \"./FormProductEdit\";\r\nimport FormProductAdd from \"./FormProductAdd\";\r\nimport { Table, Button, Alert, Row, Col, Form,Modal} from \"react-bootstrap\";\r\nimport { delateFetch,getFetch } from \"../api/app\";\r\nimport { useForm } from \"react-hook-form\";\r\nexport default function TableProducts({\r\n\tproducts,\r\n\trequestProduct,\r\n}) {\r\n\tconst [message, setMessage] = useState(false);\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\tconst [filterProducts, setFilterProducts] = useState([]);\r\n\tconst [selectProduct, setSelectProduct] = useState([]);\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [typeModal, setTypeModal] = useState(false);\r\n\tconst [error, setError] = React.useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst handleSelect = (p) => setSelectProduct(p);\r\n\tconst handleTypeModalAdd = () => setTypeModal(true);\r\n\tconst handleTypeModalEdit = () => setTypeModal(false);\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst filterProductsFunction = (data) => {\r\n\t\tswitch (data.filter) {\r\n\t\t\tcase \"yt\":\r\n\t\t\t\tsetFilterProducts(products.filter((e) => e.type === \"Youtube\"));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fb\":\r\n\t\t\t\tsetFilterProducts(products.filter((e) => e.type === \"Facebook\"));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"i\":\r\n\t\t\t\tsetFilterProducts(products.filter((e) => e.type === \"Instagram\"));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"t\":\r\n\t\t\t\tsetFilterProducts(products.filter((e) => e.type === \"Twitter\"));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tt\":\r\n\t\t\t\tsetFilterProducts(products.filter((e) => e.type === \"Tik-Tok\"));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"all\":\r\n\t\t\t\tsetFilterProducts(products);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tsetFilterProducts(products);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst onSubmit = (data) => filterProductsFunction(data);\r\n\tconst upDate = () => {\r\n\t\tgetFetch(\"get/all/products\").then((data) => {\r\n\t\t\tif (!data) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\trequestProduct()\r\n\t\t\tsetFilterProducts(data.productsDB);\r\n\t\t});\r\n\t};\r\n\tconst delateProduct = (id) => {\r\n\t\tsetLoading(true);\r\n\t\tdelateFetch(`dalate/product/${id}`).then((resp) => {\r\n\t\t\tif (!resp) {\r\n\t\t\t\tsetError(true)\r\n\t\t\t\treturn setMessage(true);\r\n\t\t\t}\r\n\t\t\tupDate()\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetMessage(true);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetMessage(false);\r\n\t\t\t}, 3000);\r\n\t\t\t\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFilterProducts(products)\r\n\t},[])\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{message &&\r\n\t\t\t\t(error ? (\r\n\t\t\t\t\t<Alert variant='danger'>\r\n\t\t\t\t\t\tNo se a podido borrar el producto, Por favor verifique los datos\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Alert variant='success'>\r\n\t\t\t\t\t\tEl producto se a borrado cerrectamente!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t))}\r\n\t\t\t<Modal\r\n\t\t\t\tshow={show}\r\n\t\t\t\tonHide={handleClose}\r\n\t\t\t\tbackdrop='static'\r\n\t\t\t\tkeyboard={false}\r\n\t\t\t\tsize='lg'\r\n\t\t\t\taria-labelledby='contained-modal-title-vcenter'\r\n\t\t\t\tcentered\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>\r\n\t\t\t\t\t\t{!typeModal ? \"Editar Producto\" : \"Agregar Producto\"}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{!typeModal ? (\r\n\t\t\t\t\t\t<FormProductEdit\r\n\t\t\t\t\t\t\tproduct={selectProduct}\r\n\t\t\t\t\t\t\trequestProduct={upDate}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<FormProductAdd requestProduct={upDate} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: 15, marginLeft: 16 }}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandleTypeModalAdd();\r\n\t\t\t\t\t\t\t\thandleShow();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAgregar producto\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={{ marginRight: 16 }}>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas='select'\r\n\t\t\t\t\t\t\tname='filter'\r\n\t\t\t\t\t\t\tonChange={handleSubmit(onSubmit)}\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='all'>Default</option>\r\n\t\t\t\t\t\t\t<option value='yt'>Youtube</option>\r\n\t\t\t\t\t\t\t<option value='fb'>Facebook</option>\r\n\t\t\t\t\t\t\t<option value='i'>Instagram</option>\r\n\t\t\t\t\t\t\t<option value='t'>Twitter</option>\r\n\t\t\t\t\t\t\t<option value='tt'>Tik-Tok</option>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t\t<Table striped bordered hover>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Nombre producto</th>\r\n\t\t\t\t\t\t<th>Tipo</th>\r\n\t\t\t\t\t\t<th>Catidad</th>\r\n\t\t\t\t\t\t<th>Precio</th>\r\n\t\t\t\t\t\t<th>Disponible</th>\r\n\t\t\t\t\t\t<th>Opciones</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{filterProducts.map((p, i) => (\r\n\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t<td>{p.nameProduct}</td>\r\n\t\t\t\t\t\t\t<td>{p.type}</td>\r\n\t\t\t\t\t\t\t<td>{p.quantity}</td>\r\n\t\t\t\t\t\t\t<td>{p.price} USD</td>\r\n\t\t\t\t\t\t\t<td>Si</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant='info'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleTypeModalEdit()\r\n\t\t\t\t\t\t\t\t\t\t\thandleShow();\r\n\t\t\t\t\t\t\t\t\t\t\thandleSelect(p);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdelateProduct(p._id);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{isLoading ? \"Eliminando...\" : \"Eliminar\"}\r\n\t\t\t\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React,{useState} from \"react\";\r\nimport { Jumbotron, Button } from \"react-bootstrap\";\r\nexport default function JumBotron({sessionID}) {\r\n  const [data, setDate] = useState(JSON.parse(sessionStorage.getItem('id')))\r\n  return (\r\n    <Jumbotron>\r\n      <h1>Dashboard, LikedMe!</h1>\r\n      <p>\r\n      <label>Admin: </label >\r\n         {data.firtsName}\r\n      <p>\r\n      <label>Matricula: </label >\r\n         {data.enrollment}\r\n      </p>\r\n      </p>\r\n      <p>\r\n        <Button variant=\"primary\">Perfl</Button>\r\n      </p>\r\n    </Jumbotron>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getFetch } from \"../api/app\";\r\nimport NavBar from \"./NavBar\";\r\nimport TableProducts from \"./TableProducts\";\r\nimport Jumbotron from \"./Jumbotron\";\r\nimport { Modal, Spinner } from \"react-bootstrap\";\r\nexport default function Dashboard() {\r\n\tconst history = useHistory();\r\n\tconst [sessionID] = useState(sessionStorage.getItem(\"id\"));\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\tconst [products, setProducts] = useState([]);\r\n\r\n\tconst requestProduct = () => {\r\n\t\tgetFetch(\"get/all/products\").then((data) => {\r\n\t\t\tif (!data) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetProducts(data.productsDB);\r\n\t\t\tsetLoading(true);\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\t!sessionID && history.push(\"/\");\r\n\t\trequestProduct();\r\n\t}, []);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NavBar />\r\n\t\t\t<Jumbotron adminDate={sessionID} />\r\n\t\t\t{isLoading ? (\r\n\t\t\t\tproducts ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<TableProducts\r\n\t\t\t\t\t\t\tproducts={products}\r\n\t\t\t\t\t\t\trequestProduct={requestProduct}\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h>Error</h>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<Spinner animation='border' role='status'>\r\n\t\t\t\t\t<span className='sr-only'>Loading...</span>\r\n\t\t\t\t</Spinner>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n","import React,{createContext,Component} from 'react'\r\nimport {getFetch} from '../api/app'\r\nexport const AppContext = createContext();\r\nexport class AppContextProvider extends Component {\r\n    state={\r\n        products: [],\r\n        admin:[],\r\n        isLoading: false,\r\n        error:false\r\n    }\r\n    getProducts = () =>{\r\n        getFetch('get/all/products').then(data => {\r\n            this.setState({isLoading:false})\r\n            console.log(data)\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <AppContext.Provider value={{...this.state,getProducts:this.getProducts}}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\nimport { HashRouter, Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport {AppContextProvider} from \"./context/AppContext\";\nfunction App() {\n  return (\n    <AppContextProvider>\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}